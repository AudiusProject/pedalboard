// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file core/v1/types.proto (package core.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { NewReleaseMessage } from "../../ddex/v1beta1/release_pb";
import { file_ddex_v1beta1_release } from "../../ddex/v1beta1/release_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file core/v1/types.proto.
 */
export const file_core_v1_types: GenFile = /*@__PURE__*/
  fileDesc("ChNjb3JlL3YxL3R5cGVzLnByb3RvEgdjb3JlLnYxIg0KC1BpbmdSZXF1ZXN0Ih8KDFBpbmdSZXNwb25zZRIPCgdtZXNzYWdlGAEgASgJIhIKEEdldEhlYWx0aFJlcXVlc3QiEwoRR2V0SGVhbHRoUmVzcG9uc2UiFAoSR2V0Tm9kZUluZm9SZXF1ZXN0InoKE0dldE5vZGVJbmZvUmVzcG9uc2USDwoHY2hhaW5pZBgBIAEoCRIOCgZzeW5jZWQYAiABKAgSFQoNY29tZXRfYWRkcmVzcxgDIAEoCRITCgtldGhfYWRkcmVzcxgEIAEoCRIWCg5jdXJyZW50X2hlaWdodBgFIAEoAyIhCg9HZXRCbG9ja1JlcXVlc3QSDgoGaGVpZ2h0GAEgASgDIkkKEEdldEJsb2NrUmVzcG9uc2USHQoFYmxvY2sYASABKAsyDi5jb3JlLnYxLkJsb2NrEhYKDmN1cnJlbnRfaGVpZ2h0GAIgASgDIigKFUdldFRyYW5zYWN0aW9uUmVxdWVzdBIPCgd0eF9oYXNoGAEgASgJIkMKFkdldFRyYW5zYWN0aW9uUmVzcG9uc2USKQoLdHJhbnNhY3Rpb24YAiABKAsyFC5jb3JlLnYxLlRyYW5zYWN0aW9uIkkKFlNlbmRUcmFuc2FjdGlvblJlcXVlc3QSLwoLdHJhbnNhY3Rpb24YASABKAsyGi5jb3JlLnYxLlNpZ25lZFRyYW5zYWN0aW9uIkQKF1NlbmRUcmFuc2FjdGlvblJlc3BvbnNlEikKC3RyYW5zYWN0aW9uGAEgASgLMhQuY29yZS52MS5UcmFuc2FjdGlvbiJMChlGb3J3YXJkVHJhbnNhY3Rpb25SZXF1ZXN0Ei8KC3RyYW5zYWN0aW9uGAEgASgLMhouY29yZS52MS5TaWduZWRUcmFuc2FjdGlvbiIcChpGb3J3YXJkVHJhbnNhY3Rpb25SZXNwb25zZSJZCiFHZXRSZWdpc3RyYXRpb25BdHRlc3RhdGlvblJlcXVlc3QSNAoMcmVnaXN0cmF0aW9uGAEgASgLMh4uY29yZS52MS5WYWxpZGF0b3JSZWdpc3RyYXRpb24ibQoiR2V0UmVnaXN0cmF0aW9uQXR0ZXN0YXRpb25SZXNwb25zZRIRCglzaWduYXR1cmUYASABKAkSNAoMcmVnaXN0cmF0aW9uGAIgASgLMh4uY29yZS52MS5WYWxpZGF0b3JSZWdpc3RyYXRpb24iXwojR2V0RGVyZWdpc3RyYXRpb25BdHRlc3RhdGlvblJlcXVlc3QSOAoOZGVyZWdpc3RyYXRpb24YASABKAsyIC5jb3JlLnYxLlZhbGlkYXRvckRlcmVnaXN0cmF0aW9uInMKJEdldERlcmVnaXN0cmF0aW9uQXR0ZXN0YXRpb25SZXNwb25zZRIRCglzaWduYXR1cmUYASABKAkSOAoOZGVyZWdpc3RyYXRpb24YAiABKAsyIC5jb3JlLnYxLlZhbGlkYXRvckRlcmVnaXN0cmF0aW9uIqQBCgVCbG9jaxIOCgZoZWlnaHQYASABKAMSDAoEaGFzaBgCIAEoCRIQCghjaGFpbl9pZBgDIAEoCRIQCghwcm9wb3NlchgEIAEoCRItCgl0aW1lc3RhbXAYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKDHRyYW5zYWN0aW9ucxgGIAMoCzIULmNvcmUudjEuVHJhbnNhY3Rpb24isQEKC1RyYW5zYWN0aW9uEgwKBGhhc2gYASABKAkSLwoLdHJhbnNhY3Rpb24YAiABKAsyGi5jb3JlLnYxLlNpZ25lZFRyYW5zYWN0aW9uEhAKCGNoYWluX2lkGAMgASgJEg4KBmhlaWdodBgEIAEoAxISCgpibG9ja19oYXNoGAUgASgJEi0KCXRpbWVzdGFtcBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiywQKEVNpZ25lZFRyYW5zYWN0aW9uEhEKCXNpZ25hdHVyZRgBIAEoCRISCgpyZXF1ZXN0X2lkGAIgASgJEiUKBXBsYXlzGOgHIAEoCzITLmNvcmUudjEuVHJhY2tQbGF5c0gAEkcKFnZhbGlkYXRvcl9yZWdpc3RyYXRpb24Y6QcgASgLMiQuY29yZS52MS5WYWxpZGF0b3JSZWdpc3RyYXRpb25MZWdhY3lIABIpCgpzbGFfcm9sbHVwGOoHIAEoCzISLmNvcmUudjEuU2xhUm9sbHVwSAASNQoNbWFuYWdlX2VudGl0eRjrByABKAsyGy5jb3JlLnYxLk1hbmFnZUVudGl0eUxlZ2FjeUgAElAKGHZhbGlkYXRvcl9kZXJlZ2lzdHJhdGlvbhjsByABKAsyKy5jb3JlLnYxLlZhbGlkYXRvck1pc2JlaGF2aW9yRGVyZWdpc3RyYXRpb25IABIvCg1zdG9yYWdlX3Byb29mGO0HIAEoCzIVLmNvcmUudjEuU3RvcmFnZVByb29mSAASSAoac3RvcmFnZV9wcm9vZl92ZXJpZmljYXRpb24Y7gcgASgLMiEuY29yZS52MS5TdG9yYWdlUHJvb2ZWZXJpZmljYXRpb25IABIsCgthdHRlc3RhdGlvbhjvByABKAsyFC5jb3JlLnYxLkF0dGVzdGF0aW9uSAASMwoHcmVsZWFzZRjwByABKAsyHy5kZGV4LnYxYmV0YTEuTmV3UmVsZWFzZU1lc3NhZ2VIAEINCgt0cmFuc2FjdGlvbiIvCgpUcmFja1BsYXlzEiEKBXBsYXlzGAEgAygLMhIuY29yZS52MS5UcmFja1BsYXkimwEKG1ZhbGlkYXRvclJlZ2lzdHJhdGlvbkxlZ2FjeRIQCghlbmRwb2ludBgBIAEoCRIVCg1jb21ldF9hZGRyZXNzGAIgASgJEhEKCWV0aF9ibG9jaxgDIAEoCRIRCglub2RlX3R5cGUYBCABKAkSDQoFc3BfaWQYBSABKAkSDwoHcHViX2tleRgGIAEoDBINCgVwb3dlchgHIAEoAyKfAQoJVHJhY2tQbGF5Eg8KB3VzZXJfaWQYASABKAkSEAoIdHJhY2tfaWQYAiABKAkSLQoJdGltZXN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCglzaWduYXR1cmUYBCABKAkSDAoEY2l0eRgFIAEoCRIOCgZyZWdpb24YBiABKAkSDwoHY291bnRyeRgHIAEoCSKLAQoJU2xhUm9sbHVwEi0KCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLYmxvY2tfc3RhcnQYAiABKAMSEQoJYmxvY2tfZW5kGAMgASgDEicKB3JlcG9ydHMYBCADKAsyFi5jb3JlLnYxLlNsYU5vZGVSZXBvcnQiPQoNU2xhTm9kZVJlcG9ydBIPCgdhZGRyZXNzGAEgASgJEhsKE251bV9ibG9ja3NfcHJvcG9zZWQYAiABKAUioQEKEk1hbmFnZUVudGl0eUxlZ2FjeRIPCgd1c2VyX2lkGAEgASgDEhMKC2VudGl0eV90eXBlGAIgASgJEhEKCWVudGl0eV9pZBgDIAEoAxIOCgZhY3Rpb24YBCABKAkSEAoIbWV0YWRhdGEYBSABKAkSEQoJc2lnbmF0dXJlGAYgASgJEg4KBnNpZ25lchgHIAEoCRINCgVub25jZRgIIAEoCSJMCiJWYWxpZGF0b3JNaXNiZWhhdmlvckRlcmVnaXN0cmF0aW9uEhUKDWNvbWV0X2FkZHJlc3MYASABKAkSDwoHcHViX2tleRgCIAEoDCJvCgxTdG9yYWdlUHJvb2YSDgoGaGVpZ2h0GAEgASgDEg8KB2FkZHJlc3MYAiABKAkSGAoQcHJvdmVyX2FkZHJlc3NlcxgDIAMoCRILCgNjaWQYBCABKAkSFwoPcHJvb2Zfc2lnbmF0dXJlGAUgASgMIjkKGFN0b3JhZ2VQcm9vZlZlcmlmaWNhdGlvbhIOCgZoZWlnaHQYASABKAMSDQoFcHJvb2YYAiABKAwiswEKC0F0dGVzdGF0aW9uEhIKCnNpZ25hdHVyZXMYASADKAkSQQoWdmFsaWRhdG9yX3JlZ2lzdHJhdGlvbhjoByABKAsyHi5jb3JlLnYxLlZhbGlkYXRvclJlZ2lzdHJhdGlvbkgAEkUKGHZhbGlkYXRvcl9kZXJlZ2lzdHJhdGlvbhjpByABKAsyIC5jb3JlLnYxLlZhbGlkYXRvckRlcmVnaXN0cmF0aW9uSABCBgoEYm9keSLAAQoVVmFsaWRhdG9yUmVnaXN0cmF0aW9uEhcKD2RlbGVnYXRlX3dhbGxldBgBIAEoCRIQCghlbmRwb2ludBgCIAEoCRIRCglub2RlX3R5cGUYAyABKAkSDQoFc3BfaWQYBCABKAkSEQoJZXRoX2Jsb2NrGAUgASgDEhUKDWNvbWV0X2FkZHJlc3MYBiABKAkSDwoHcHViX2tleRgHIAEoDBINCgVwb3dlchgIIAEoAxIQCghkZWFkbGluZRgJIAEoAyJTChdWYWxpZGF0b3JEZXJlZ2lzdHJhdGlvbhIVCg1jb21ldF9hZGRyZXNzGAEgASgJEg8KB3B1Yl9rZXkYAiABKAwSEAoIZGVhZGxpbmUYAyABKANCMlowZ2l0aHViLmNvbS9BdWRpdXNQcm9qZWN0L2F1ZGl1c2QvcGtnL2FwaS9jb3JlL3YxYgZwcm90bzM", [file_ddex_v1beta1_release, file_google_protobuf_timestamp]);

/**
 * @generated from message core.v1.PingRequest
 */
export type PingRequest = Message<"core.v1.PingRequest"> & {
};

/**
 * Describes the message core.v1.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema: GenMessage<PingRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 0);

/**
 * @generated from message core.v1.PingResponse
 */
export type PingResponse = Message<"core.v1.PingResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message core.v1.PingResponse.
 * Use `create(PingResponseSchema)` to create a new message.
 */
export const PingResponseSchema: GenMessage<PingResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 1);

/**
 * @generated from message core.v1.GetHealthRequest
 */
export type GetHealthRequest = Message<"core.v1.GetHealthRequest"> & {
};

/**
 * Describes the message core.v1.GetHealthRequest.
 * Use `create(GetHealthRequestSchema)` to create a new message.
 */
export const GetHealthRequestSchema: GenMessage<GetHealthRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 2);

/**
 * @generated from message core.v1.GetHealthResponse
 */
export type GetHealthResponse = Message<"core.v1.GetHealthResponse"> & {
};

/**
 * Describes the message core.v1.GetHealthResponse.
 * Use `create(GetHealthResponseSchema)` to create a new message.
 */
export const GetHealthResponseSchema: GenMessage<GetHealthResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 3);

/**
 * @generated from message core.v1.GetNodeInfoRequest
 */
export type GetNodeInfoRequest = Message<"core.v1.GetNodeInfoRequest"> & {
};

/**
 * Describes the message core.v1.GetNodeInfoRequest.
 * Use `create(GetNodeInfoRequestSchema)` to create a new message.
 */
export const GetNodeInfoRequestSchema: GenMessage<GetNodeInfoRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 4);

/**
 * @generated from message core.v1.GetNodeInfoResponse
 */
export type GetNodeInfoResponse = Message<"core.v1.GetNodeInfoResponse"> & {
  /**
   * @generated from field: string chainid = 1;
   */
  chainid: string;

  /**
   * @generated from field: bool synced = 2;
   */
  synced: boolean;

  /**
   * @generated from field: string comet_address = 3;
   */
  cometAddress: string;

  /**
   * @generated from field: string eth_address = 4;
   */
  ethAddress: string;

  /**
   * @generated from field: int64 current_height = 5;
   */
  currentHeight: bigint;
};

/**
 * Describes the message core.v1.GetNodeInfoResponse.
 * Use `create(GetNodeInfoResponseSchema)` to create a new message.
 */
export const GetNodeInfoResponseSchema: GenMessage<GetNodeInfoResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 5);

/**
 * @generated from message core.v1.GetBlockRequest
 */
export type GetBlockRequest = Message<"core.v1.GetBlockRequest"> & {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;
};

/**
 * Describes the message core.v1.GetBlockRequest.
 * Use `create(GetBlockRequestSchema)` to create a new message.
 */
export const GetBlockRequestSchema: GenMessage<GetBlockRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 6);

/**
 * @generated from message core.v1.GetBlockResponse
 */
export type GetBlockResponse = Message<"core.v1.GetBlockResponse"> & {
  /**
   * @generated from field: core.v1.Block block = 1;
   */
  block?: Block;

  /**
   * @generated from field: int64 current_height = 2;
   */
  currentHeight: bigint;
};

/**
 * Describes the message core.v1.GetBlockResponse.
 * Use `create(GetBlockResponseSchema)` to create a new message.
 */
export const GetBlockResponseSchema: GenMessage<GetBlockResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 7);

/**
 * @generated from message core.v1.GetTransactionRequest
 */
export type GetTransactionRequest = Message<"core.v1.GetTransactionRequest"> & {
  /**
   * @generated from field: string tx_hash = 1;
   */
  txHash: string;
};

/**
 * Describes the message core.v1.GetTransactionRequest.
 * Use `create(GetTransactionRequestSchema)` to create a new message.
 */
export const GetTransactionRequestSchema: GenMessage<GetTransactionRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 8);

/**
 * @generated from message core.v1.GetTransactionResponse
 */
export type GetTransactionResponse = Message<"core.v1.GetTransactionResponse"> & {
  /**
   * @generated from field: core.v1.Transaction transaction = 2;
   */
  transaction?: Transaction;
};

/**
 * Describes the message core.v1.GetTransactionResponse.
 * Use `create(GetTransactionResponseSchema)` to create a new message.
 */
export const GetTransactionResponseSchema: GenMessage<GetTransactionResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 9);

/**
 * @generated from message core.v1.SendTransactionRequest
 */
export type SendTransactionRequest = Message<"core.v1.SendTransactionRequest"> & {
  /**
   * @generated from field: core.v1.SignedTransaction transaction = 1;
   */
  transaction?: SignedTransaction;
};

/**
 * Describes the message core.v1.SendTransactionRequest.
 * Use `create(SendTransactionRequestSchema)` to create a new message.
 */
export const SendTransactionRequestSchema: GenMessage<SendTransactionRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 10);

/**
 * @generated from message core.v1.SendTransactionResponse
 */
export type SendTransactionResponse = Message<"core.v1.SendTransactionResponse"> & {
  /**
   * @generated from field: core.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;
};

/**
 * Describes the message core.v1.SendTransactionResponse.
 * Use `create(SendTransactionResponseSchema)` to create a new message.
 */
export const SendTransactionResponseSchema: GenMessage<SendTransactionResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 11);

/**
 * @generated from message core.v1.ForwardTransactionRequest
 */
export type ForwardTransactionRequest = Message<"core.v1.ForwardTransactionRequest"> & {
  /**
   * @generated from field: core.v1.SignedTransaction transaction = 1;
   */
  transaction?: SignedTransaction;
};

/**
 * Describes the message core.v1.ForwardTransactionRequest.
 * Use `create(ForwardTransactionRequestSchema)` to create a new message.
 */
export const ForwardTransactionRequestSchema: GenMessage<ForwardTransactionRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 12);

/**
 * @generated from message core.v1.ForwardTransactionResponse
 */
export type ForwardTransactionResponse = Message<"core.v1.ForwardTransactionResponse"> & {
};

/**
 * Describes the message core.v1.ForwardTransactionResponse.
 * Use `create(ForwardTransactionResponseSchema)` to create a new message.
 */
export const ForwardTransactionResponseSchema: GenMessage<ForwardTransactionResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 13);

/**
 * @generated from message core.v1.GetRegistrationAttestationRequest
 */
export type GetRegistrationAttestationRequest = Message<"core.v1.GetRegistrationAttestationRequest"> & {
  /**
   * @generated from field: core.v1.ValidatorRegistration registration = 1;
   */
  registration?: ValidatorRegistration;
};

/**
 * Describes the message core.v1.GetRegistrationAttestationRequest.
 * Use `create(GetRegistrationAttestationRequestSchema)` to create a new message.
 */
export const GetRegistrationAttestationRequestSchema: GenMessage<GetRegistrationAttestationRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 14);

/**
 * @generated from message core.v1.GetRegistrationAttestationResponse
 */
export type GetRegistrationAttestationResponse = Message<"core.v1.GetRegistrationAttestationResponse"> & {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: core.v1.ValidatorRegistration registration = 2;
   */
  registration?: ValidatorRegistration;
};

/**
 * Describes the message core.v1.GetRegistrationAttestationResponse.
 * Use `create(GetRegistrationAttestationResponseSchema)` to create a new message.
 */
export const GetRegistrationAttestationResponseSchema: GenMessage<GetRegistrationAttestationResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 15);

/**
 * @generated from message core.v1.GetDeregistrationAttestationRequest
 */
export type GetDeregistrationAttestationRequest = Message<"core.v1.GetDeregistrationAttestationRequest"> & {
  /**
   * @generated from field: core.v1.ValidatorDeregistration deregistration = 1;
   */
  deregistration?: ValidatorDeregistration;
};

/**
 * Describes the message core.v1.GetDeregistrationAttestationRequest.
 * Use `create(GetDeregistrationAttestationRequestSchema)` to create a new message.
 */
export const GetDeregistrationAttestationRequestSchema: GenMessage<GetDeregistrationAttestationRequest> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 16);

/**
 * @generated from message core.v1.GetDeregistrationAttestationResponse
 */
export type GetDeregistrationAttestationResponse = Message<"core.v1.GetDeregistrationAttestationResponse"> & {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: core.v1.ValidatorDeregistration deregistration = 2;
   */
  deregistration?: ValidatorDeregistration;
};

/**
 * Describes the message core.v1.GetDeregistrationAttestationResponse.
 * Use `create(GetDeregistrationAttestationResponseSchema)` to create a new message.
 */
export const GetDeregistrationAttestationResponseSchema: GenMessage<GetDeregistrationAttestationResponse> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 17);

/**
 * @generated from message core.v1.Block
 */
export type Block = Message<"core.v1.Block"> & {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: string hash = 2;
   */
  hash: string;

  /**
   * @generated from field: string chain_id = 3;
   */
  chainId: string;

  /**
   * @generated from field: string proposer = 4;
   */
  proposer: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 5;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: repeated core.v1.Transaction transactions = 6;
   */
  transactions: Transaction[];
};

/**
 * Describes the message core.v1.Block.
 * Use `create(BlockSchema)` to create a new message.
 */
export const BlockSchema: GenMessage<Block> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 18);

/**
 * @generated from message core.v1.Transaction
 */
export type Transaction = Message<"core.v1.Transaction"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: core.v1.SignedTransaction transaction = 2;
   */
  transaction?: SignedTransaction;

  /**
   * @generated from field: string chain_id = 3;
   */
  chainId: string;

  /**
   * @generated from field: int64 height = 4;
   */
  height: bigint;

  /**
   * @generated from field: string block_hash = 5;
   */
  blockHash: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 6;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message core.v1.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 */
export const TransactionSchema: GenMessage<Transaction> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 19);

/**
 * @generated from message core.v1.SignedTransaction
 */
export type SignedTransaction = Message<"core.v1.SignedTransaction"> & {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * @generated from oneof core.v1.SignedTransaction.transaction
   */
  transaction: {
    /**
     * @generated from field: core.v1.TrackPlays plays = 1000;
     */
    value: TrackPlays;
    case: "plays";
  } | {
    /**
     * @generated from field: core.v1.ValidatorRegistrationLegacy validator_registration = 1001;
     */
    value: ValidatorRegistrationLegacy;
    case: "validatorRegistration";
  } | {
    /**
     * @generated from field: core.v1.SlaRollup sla_rollup = 1002;
     */
    value: SlaRollup;
    case: "slaRollup";
  } | {
    /**
     * @generated from field: core.v1.ManageEntityLegacy manage_entity = 1003;
     */
    value: ManageEntityLegacy;
    case: "manageEntity";
  } | {
    /**
     * @generated from field: core.v1.ValidatorMisbehaviorDeregistration validator_deregistration = 1004;
     */
    value: ValidatorMisbehaviorDeregistration;
    case: "validatorDeregistration";
  } | {
    /**
     * @generated from field: core.v1.StorageProof storage_proof = 1005;
     */
    value: StorageProof;
    case: "storageProof";
  } | {
    /**
     * @generated from field: core.v1.StorageProofVerification storage_proof_verification = 1006;
     */
    value: StorageProofVerification;
    case: "storageProofVerification";
  } | {
    /**
     * @generated from field: core.v1.Attestation attestation = 1007;
     */
    value: Attestation;
    case: "attestation";
  } | {
    /**
     * @generated from field: ddex.v1beta1.NewReleaseMessage release = 1008;
     */
    value: NewReleaseMessage;
    case: "release";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message core.v1.SignedTransaction.
 * Use `create(SignedTransactionSchema)` to create a new message.
 */
export const SignedTransactionSchema: GenMessage<SignedTransaction> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 20);

/**
 * @generated from message core.v1.TrackPlays
 */
export type TrackPlays = Message<"core.v1.TrackPlays"> & {
  /**
   * @generated from field: repeated core.v1.TrackPlay plays = 1;
   */
  plays: TrackPlay[];
};

/**
 * Describes the message core.v1.TrackPlays.
 * Use `create(TrackPlaysSchema)` to create a new message.
 */
export const TrackPlaysSchema: GenMessage<TrackPlays> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 21);

/**
 * @generated from message core.v1.ValidatorRegistrationLegacy
 */
export type ValidatorRegistrationLegacy = Message<"core.v1.ValidatorRegistrationLegacy"> & {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint: string;

  /**
   * @generated from field: string comet_address = 2;
   */
  cometAddress: string;

  /**
   * @generated from field: string eth_block = 3;
   */
  ethBlock: string;

  /**
   * @generated from field: string node_type = 4;
   */
  nodeType: string;

  /**
   * @generated from field: string sp_id = 5;
   */
  spId: string;

  /**
   * @generated from field: bytes pub_key = 6;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: int64 power = 7;
   */
  power: bigint;
};

/**
 * Describes the message core.v1.ValidatorRegistrationLegacy.
 * Use `create(ValidatorRegistrationLegacySchema)` to create a new message.
 */
export const ValidatorRegistrationLegacySchema: GenMessage<ValidatorRegistrationLegacy> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 22);

/**
 * @generated from message core.v1.TrackPlay
 */
export type TrackPlay = Message<"core.v1.TrackPlay"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string track_id = 2;
   */
  trackId: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: string signature = 4;
   */
  signature: string;

  /**
   * @generated from field: string city = 5;
   */
  city: string;

  /**
   * @generated from field: string region = 6;
   */
  region: string;

  /**
   * @generated from field: string country = 7;
   */
  country: string;
};

/**
 * Describes the message core.v1.TrackPlay.
 * Use `create(TrackPlaySchema)` to create a new message.
 */
export const TrackPlaySchema: GenMessage<TrackPlay> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 23);

/**
 * @generated from message core.v1.SlaRollup
 */
export type SlaRollup = Message<"core.v1.SlaRollup"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: int64 block_start = 2;
   */
  blockStart: bigint;

  /**
   * @generated from field: int64 block_end = 3;
   */
  blockEnd: bigint;

  /**
   * @generated from field: repeated core.v1.SlaNodeReport reports = 4;
   */
  reports: SlaNodeReport[];
};

/**
 * Describes the message core.v1.SlaRollup.
 * Use `create(SlaRollupSchema)` to create a new message.
 */
export const SlaRollupSchema: GenMessage<SlaRollup> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 24);

/**
 * @generated from message core.v1.SlaNodeReport
 */
export type SlaNodeReport = Message<"core.v1.SlaNodeReport"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: int32 num_blocks_proposed = 2;
   */
  numBlocksProposed: number;
};

/**
 * Describes the message core.v1.SlaNodeReport.
 * Use `create(SlaNodeReportSchema)` to create a new message.
 */
export const SlaNodeReportSchema: GenMessage<SlaNodeReport> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 25);

/**
 * @generated from message core.v1.ManageEntityLegacy
 */
export type ManageEntityLegacy = Message<"core.v1.ManageEntityLegacy"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: string entity_type = 2;
   */
  entityType: string;

  /**
   * @generated from field: int64 entity_id = 3;
   */
  entityId: bigint;

  /**
   * @generated from field: string action = 4;
   */
  action: string;

  /**
   * @generated from field: string metadata = 5;
   */
  metadata: string;

  /**
   * @generated from field: string signature = 6;
   */
  signature: string;

  /**
   * @generated from field: string signer = 7;
   */
  signer: string;

  /**
   * @generated from field: string nonce = 8;
   */
  nonce: string;
};

/**
 * Describes the message core.v1.ManageEntityLegacy.
 * Use `create(ManageEntityLegacySchema)` to create a new message.
 */
export const ManageEntityLegacySchema: GenMessage<ManageEntityLegacy> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 26);

/**
 * @generated from message core.v1.ValidatorMisbehaviorDeregistration
 */
export type ValidatorMisbehaviorDeregistration = Message<"core.v1.ValidatorMisbehaviorDeregistration"> & {
  /**
   * @generated from field: string comet_address = 1;
   */
  cometAddress: string;

  /**
   * @generated from field: bytes pub_key = 2;
   */
  pubKey: Uint8Array;
};

/**
 * Describes the message core.v1.ValidatorMisbehaviorDeregistration.
 * Use `create(ValidatorMisbehaviorDeregistrationSchema)` to create a new message.
 */
export const ValidatorMisbehaviorDeregistrationSchema: GenMessage<ValidatorMisbehaviorDeregistration> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 27);

/**
 * @generated from message core.v1.StorageProof
 */
export type StorageProof = Message<"core.v1.StorageProof"> & {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * @generated from field: repeated string prover_addresses = 3;
   */
  proverAddresses: string[];

  /**
   * @generated from field: string cid = 4;
   */
  cid: string;

  /**
   * @generated from field: bytes proof_signature = 5;
   */
  proofSignature: Uint8Array;
};

/**
 * Describes the message core.v1.StorageProof.
 * Use `create(StorageProofSchema)` to create a new message.
 */
export const StorageProofSchema: GenMessage<StorageProof> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 28);

/**
 * @generated from message core.v1.StorageProofVerification
 */
export type StorageProofVerification = Message<"core.v1.StorageProofVerification"> & {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: bytes proof = 2;
   */
  proof: Uint8Array;
};

/**
 * Describes the message core.v1.StorageProofVerification.
 * Use `create(StorageProofVerificationSchema)` to create a new message.
 */
export const StorageProofVerificationSchema: GenMessage<StorageProofVerification> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 29);

/**
 * @generated from message core.v1.Attestation
 */
export type Attestation = Message<"core.v1.Attestation"> & {
  /**
   * @generated from field: repeated string signatures = 1;
   */
  signatures: string[];

  /**
   * @generated from oneof core.v1.Attestation.body
   */
  body: {
    /**
     * @generated from field: core.v1.ValidatorRegistration validator_registration = 1000;
     */
    value: ValidatorRegistration;
    case: "validatorRegistration";
  } | {
    /**
     * @generated from field: core.v1.ValidatorDeregistration validator_deregistration = 1001;
     */
    value: ValidatorDeregistration;
    case: "validatorDeregistration";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message core.v1.Attestation.
 * Use `create(AttestationSchema)` to create a new message.
 */
export const AttestationSchema: GenMessage<Attestation> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 30);

/**
 * @generated from message core.v1.ValidatorRegistration
 */
export type ValidatorRegistration = Message<"core.v1.ValidatorRegistration"> & {
  /**
   * @generated from field: string delegate_wallet = 1;
   */
  delegateWallet: string;

  /**
   * @generated from field: string endpoint = 2;
   */
  endpoint: string;

  /**
   * @generated from field: string node_type = 3;
   */
  nodeType: string;

  /**
   * @generated from field: string sp_id = 4;
   */
  spId: string;

  /**
   * @generated from field: int64 eth_block = 5;
   */
  ethBlock: bigint;

  /**
   * @generated from field: string comet_address = 6;
   */
  cometAddress: string;

  /**
   * @generated from field: bytes pub_key = 7;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: int64 power = 8;
   */
  power: bigint;

  /**
   * @generated from field: int64 deadline = 9;
   */
  deadline: bigint;
};

/**
 * Describes the message core.v1.ValidatorRegistration.
 * Use `create(ValidatorRegistrationSchema)` to create a new message.
 */
export const ValidatorRegistrationSchema: GenMessage<ValidatorRegistration> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 31);

/**
 * @generated from message core.v1.ValidatorDeregistration
 */
export type ValidatorDeregistration = Message<"core.v1.ValidatorDeregistration"> & {
  /**
   * @generated from field: string comet_address = 1;
   */
  cometAddress: string;

  /**
   * @generated from field: bytes pub_key = 2;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: int64 deadline = 3;
   */
  deadline: bigint;
};

/**
 * Describes the message core.v1.ValidatorDeregistration.
 * Use `create(ValidatorDeregistrationSchema)` to create a new message.
 */
export const ValidatorDeregistrationSchema: GenMessage<ValidatorDeregistration> = /*@__PURE__*/
  messageDesc(file_core_v1_types, 32);

